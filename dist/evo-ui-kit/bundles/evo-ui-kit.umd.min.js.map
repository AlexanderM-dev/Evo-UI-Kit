{"version":3,"sources":["ng://evo-ui-kit/lib/components/evo-button/evo-button.component.ts","ng://evo-ui-kit/lib/common/evo-control-state-manager/evo-control-states.enum.ts","ng://evo-ui-kit/lib/common/evo-control-state-manager/evo-control-state-manager.ts","ng://evo-ui-kit/lib/common/evo-base-control.ts","ng://evo-ui-kit/lib/components/evo-checkbox/evo-checkbox.component.ts","ng://evo-ui-kit/lib/components/evo-control-error/evo-control-error.component.ts","ng://evo-ui-kit/lib/components/evo-input/evo-input.component.ts","ng://evo-ui-kit/lib/components/evo-banner/evo-banner.component.ts","ng://evo-ui-kit/lib/common/Serializable.ts","ng://evo-ui-kit/lib/components/evo-sidebar/evo-sidebar.service.ts","ng://evo-ui-kit/lib/components/evo-sidebar/evo-sidebar.component.ts","ng://evo-ui-kit/lib/directives/evo-ui-class.directive.ts","ng://evo-ui-kit/lib/evo-ui-kit.module.ts"],"names":["EvoButtonComponent","elRef","this","Object","defineProperty","prototype","classes","size","push","color","_loading","disabled","result","clientWidth","value","nativeElement","getBoundingClientRect","width","Component","args","selector","template","styles","changeDetection","ChangeDetectionStrategy","OnPush","ElementRef","Input","EvoControlStateManager","control","extraStates","valid","dirty","touched","invalid","EvoBaseControl","ngAfterContentInit","formControlName","formControlDirective","Error","stateManager","state","currentState","EvoControlStates","ContentChild","FormControlName","FormControlDirective","_","tslib_1.__extends","EvoCheckboxComponent","_value","onChange","writeValue","registerOnChange","fn","registerOnTouched","onTouched","setDisabledState","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","required","email","phone","EvoControlErrorComponent","errorMessages","tslib_1","__assign","defaultErrorMessages","errorsMessages","keys","errors","map","key","showError","index","showCount","EvoInputComponent","_this","_super","call","ngAfterViewInit","autoFocus","inputElement","focus","focused","tooltip","onFocus","onBlur","onTooltipClick","event","preventDefault","stopPropagation","hideTooltip","tooltipVisibilityTimeout","setTimeout","tooltipShown","showTooltip","ViewChild","Éµ0","EvoBanner","data","EvoBannerLocations","_a","assign","window","EvoBannerComponent","EvoBannerTypes","EventEmitter","onBannerClick","bannerClick","emit","banner","useValue","Inject","Output","BehaviorSubject","EvoSidebarService","deregister","id","registeredSidebars","register","EvoSidebarTypes","console","error","open","isSidebarVisible$","next","close","Injectable","EvoSidebarComponent","sidebarService","isVisible","ngOnDestroy","ngOnInit","subscribe","payload","states","keyUpSubscription","subscribeToKeyEvent","unsubscribe","closeSidebar","onClose","observableFromEvent","document","body","keyCode","Key","Escape","EvoUiClassDirective","_iterableDiffers","_keyValueDiffers","_ngEl","_renderer","prefix","classList","item","Array","isArray","className","reduce","newData","split","myClass","join","ngClass","Directive","IterableDiffers","KeyValueDiffers","Renderer2","NgClass","components","directives","bundle","__spread","EvoUiKitModule","forRoot","ngModule","NgModule","imports","CommonModule","FormsModule","TextMaskModule","declarations","exports","schemas","CUSTOM_ELEMENTS_SCHEMA"],"mappings":"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","sourcesContent":["import { ChangeDetectionStrategy, Component, ElementRef, Input } from '@angular/core';\n\nexport enum EvoButtonSizes {\n    fullWidth = 'full-width',\n    small = 'small',\n    large = 'large',\n}\n\nexport enum EvoButtonStyles {\n    lined = 'lined',\n    darkblue = 'darkblue',\n    darkblueLined = 'darkblue-lined',\n    green = 'green',\n    greenlined = 'green-lined',\n    purple = 'purple'\n}\n\n@Component({\n    selector: 'evo-button',\n    template: `<div class=\"evo-button\" [evoUiClass]=\"totalClasses\" [ngStyle]=\"totalStyles\">\n    <span *ngIf=\"!loading\">\n        <ng-content></ng-content>\n    </span>\n    <span *ngIf=\"loading\" class=\"evo-button__dots\">\n        <span class=\"evo-button__dot\"></span>\n        <span class=\"evo-button__dot\"></span>\n        <span class=\"evo-button__dot\"></span>\n    </span>\n</div>\n`,\n    styles: [`@-webkit-keyframes fx{50%{-webkit-transform:scale(1);transform:scale(1);opacity:1}100%{opacity:0}}@keyframes fx{50%{-webkit-transform:scale(1);transform:scale(1);opacity:1}100%{opacity:0}}.evo-button{display:inline-block;box-sizing:border-box;padding:0 30px;height:44px;line-height:44px;vertical-align:middle;text-align:center;background-image:none;white-space:nowrap;font-family:museo,Arial,sans-serif;font-weight:700;font-size:16px;color:#fff;text-transform:uppercase;border-radius:30px;background-color:#ff7800;border:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;outline:0;cursor:pointer;transition:background-color .3s,color .3s,border .3s}.evo-button:hover{background-color:#ff9d47;color:#fff}.evo-button:active,.evo-button:focus{background-color:#cc6000;color:#fff;outline:0}.evo-button:disabled,.evo-button_disabled{background:#d6d6d6!important;border-color:#d6d6d6!important;color:#fff!important;cursor:not-allowed}.evo-button_lined{background-color:#fff;color:#ff7800;border:1px solid #ff7800}.evo-button_lined:hover{background-color:#ff7800;color:#fff}.evo-button_lined:active,.evo-button_lined:focus{background-color:#cc6000;color:#fff;border-color:#cc6000}.evo-button_darkblue{background-color:#546e7a}.evo-button_darkblue:hover{background-color:#7596a5}.evo-button_darkblue:active,.evo-button_darkblue:focus{background-color:#283239}.evo-button_darkblue-lined{background-color:#fff;color:#546e7a;border:1px solid #546e7a}.evo-button_darkblue-lined:hover{background-color:#546e7a;color:#fff}.evo-button_darkblue-lined:active,.evo-button_darkblue-lined:focus{background-color:#283239;color:#fff;border-color:#283239}.evo-button_green{background-color:#8bc34a}.evo-button_green:hover{background-color:#a2cf6e}.evo-button_green:active,.evo-button_green:focus{background-color:#6f9c3b}.evo-button_green-lined{background-color:#fff;color:#8bc34a;border:1px solid #8bc34a}.evo-button_green-lined:hover{background-color:#8bc34a;color:#fff}.evo-button_green-lined:active,.evo-button_green-lined:focus{background-color:#6f9c3b;color:#fff;border-color:#6f9c3b}.evo-button_purple{background-color:#ab4ac3}.evo-button_purple:hover{background-color:#cc58e8}.evo-button_purple:active,.evo-button_purple:focus{background-color:#9335ab}.evo-button_full-width{width:100%;text-align:center}.evo-button_small{padding:0 20px;height:30px;line-height:30px;font-size:14px}.evo-button_large{padding:0 40px;height:60px;line-height:60px;font-size:18px}.evo-button_icon{padding-left:22px;padding-right:22px;display:inline-flex;align-items:center}.evo-button_loading{pointer-events:none;position:relative}.evo-button__dots{position:absolute;top:50%;left:50%;margin-left:-30px;margin-top:-5px}.evo-button__dot{width:10px;height:10px;border-radius:50%;float:left;background:currentColor;margin:0 5px;-webkit-transform:scale(0);transform:scale(0);-webkit-animation:1s infinite fx;animation:1s infinite fx}.evo-button__dot:nth-child(2){-webkit-animation:1s .3s infinite fx;animation:1s .3s infinite fx}.evo-button__dot:nth-child(3){-webkit-animation:1s .6s infinite fx;animation:1s .6s infinite fx}`],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class EvoButtonComponent {\n    @Input() color: EvoButtonStyles;\n    @Input() disabled = false;\n    @Input() size: EvoButtonSizes;\n\n    private _loading = false;\n    private clientWidth: number;\n\n    constructor(private elRef: ElementRef) {\n\n    }\n\n    get totalClasses(): string[] {\n        const classes: string[] = [];\n\n        if (this.size) {\n            classes.push(this.size);\n        }\n\n        if (this.color) {\n            classes.push(this.color);\n        }\n\n        if (this._loading) {\n            classes.push('loading');\n        }\n\n        if (this.disabled) {\n            classes.push('disabled');\n        }\n\n        return classes;\n    }\n\n    get totalStyles(): {[styleKey: string]: any} {\n        const result = {};\n\n        if (this._loading) {\n            result['width'] = `${this.clientWidth}px`;\n        }\n\n        return result;\n    }\n\n    get loading(): boolean {\n        return this._loading;\n    }\n\n    @Input() set loading(value: boolean) {\n        this.clientWidth = this.elRef.nativeElement.getBoundingClientRect().width;\n        this._loading = value;\n    }\n}\n","export enum EvoControlStates {\n  valid = 'valid',\n  invalid = 'invalid',\n}\n","import { AbstractControl } from '@angular/forms';\nimport { IEvoControlState } from './evo-control-state.interface';\n\nexport class EvoControlStateManager {\n  control: AbstractControl;\n\n  constructor(control: AbstractControl, extraStates?: IEvoControlState) {\n    this.control = control;\n  }\n\n  get currentState(): IEvoControlState {\n    // TODO merge conditions with extraStates\n\n    return {\n      valid: this.control.dirty && this.control.touched && this.control.valid,\n      invalid: this.control.dirty && this.control.touched && this.control.invalid,\n    };\n  }\n}\n","import { AfterContentInit, ContentChild, Input } from '@angular/core';\nimport { AbstractControl, FormControlDirective, FormControlName } from '@angular/forms';\nimport { IEvoControlState } from './evo-control-state-manager/evo-control-state.interface';\nimport { EvoControlStateManager } from './evo-control-state-manager/evo-control-state-manager';\nimport { IEvoControlError } from '../components/evo-control-error/evo-control-error.component';\nimport { EvoControlStates } from './evo-control-state-manager/evo-control-states.enum';\n\nexport class EvoBaseControl implements AfterContentInit {\n  @ContentChild(FormControlName) formControlName: FormControlName;\n  @ContentChild(FormControlDirective) formControlDirective: FormControlDirective;\n  @Input() state: IEvoControlState;\n  @Input() errorsMessages: IEvoControlError;\n\n  control: AbstractControl;\n  stateManager: EvoControlStateManager;\n\n  ngAfterContentInit() {\n    if (this.formControlName && this.formControlName.control) {\n      this.control = this.formControlName.control;\n    } else if (this.formControlDirective && this.formControlDirective.control) {\n      this.control = this.formControlDirective.control;\n    }\n\n    if (this.control) {\n      this.stateManager = new EvoControlStateManager(this.control, this.state);\n    } else {\n      throw new Error('No template driven forms allowed with EvoUi kit');\n    }\n  }\n\n  get showErrors(): boolean {\n    return this.stateManager.currentState[EvoControlStates.invalid];\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { EvoControlStates } from '../../common/evo-control-state-manager/evo-control-states.enum';\nimport { EvoBaseControl } from '../../common/evo-base-control';\n\n\n@Component({\n    selector: 'evo-checkbox',\n    template: `<label class=\"evo-checkbox\">\n    <input class=\"evo-checkbox__input\"\n           type=\"checkbox\"\n           [evoUiClass]=\"checkboxClass\"\n           [disabled]=\"disabled\"\n           [(ngModel)]=\"value\">\n    <span class=\"evo-checkbox__text\">\n        <ng-content></ng-content>\n    </span>\n</label>\n<evo-control-error *ngIf=\"showErrors\"\n                   [errors]=\"control.errors\"\n                   [errorsMessages]=\"errorsMessages\"></evo-control-error>\n`,\n    styles: [`.evo-checkbox{margin:0}.evo-checkbox__input{display:none}.evo-checkbox__text{position:relative;display:inline-block;padding-left:26px;color:#212121;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.evo-checkbox__text:before{content:'';position:absolute;top:2px;left:0;width:16px;height:16px;background-color:#fff;border:1px solid #dbdbdb;border-radius:3px}input:checked+.evo-checkbox__text:before{border-color:#448aff;background:url(/assets/evo-ui-kit/icons/checkbox-check.svg) center no-repeat #448aff}input:disabled:not(:checked)+.evo-checkbox__text{cursor:default}input:disabled:not(:checked)+.evo-checkbox__text:before{background-color:#f6f6f6}input:disabled:checked+.evo-checkbox__text{cursor:default}input:disabled:checked+.evo-checkbox__text:before{opacity:.5}input.evo-checkbox_invalid+.evo-checkbox__text:before{border-color:#f22}`],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => EvoCheckboxComponent),\n            multi: true\n        }\n    ]\n})\nexport class EvoCheckboxComponent extends EvoBaseControl implements ControlValueAccessor {\n\n    public disabled = false;\n    private _value: boolean;\n\n    onChange = (_) => {};\n    onTouched = () => {};\n\n    get value(): boolean {\n        return this._value;\n    }\n\n    set value(value: boolean) {\n        this._value = value;\n        this.onChange(value);\n    }\n\n    get checkboxClass() {\n        return {\n            'invalid': this.stateManager.currentState[EvoControlStates.invalid]\n        };\n    }\n\n    writeValue(value: boolean): void {\n        this.value = value;\n    }\n\n    registerOnChange(fn: any): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n        this.onTouched = fn;\n    }\n\n    setDisabledState(state: boolean): void {\n        this.disabled = state;\n    }\n\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\nexport interface IEvoControlError {\n    [error: string]: string;\n}\n\n@Component({\n    selector: 'evo-control-error',\n    template: `<div class=\"evo-error\" *ngFor=\"let errorMsg of errorsMap; let i = index;\">\n    <span *ngIf=\"showError(i)\">{{ errorMsg }}</span>\n</div>\n`,\n    styles: [`.evo-error{font-size:14px;color:#f22;font-style:italic;margin-top:10px}`],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class EvoControlErrorComponent {\n    @Input() errors: any;\n    @Input() errorsMessages: IEvoControlError;\n    @Input() showCount = 1;\n\n    private defaultErrorMessages: IEvoControlError = {\n        required: 'ÃÂÃÂ°ÃÂ¿ÃÂ¾ÃÂ»ÃÂ½ÃÂ¸ÃÂÃÂµ ÃÂ¿ÃÂ¾ÃÂ»ÃÂµ',\n        email: 'ÃÂÃÂµÃÂ¿ÃÂÃÂ°ÃÂ²ÃÂ¸ÃÂ»ÃÂÃÂ½ÃÂ¾ ÃÂÃÂºÃÂ°ÃÂ·ÃÂ°ÃÂ½ÃÂ° ÃÂ¿ÃÂ¾ÃÂÃÂÃÂ°',\n        phone: 'ÃÂÃÂ²ÃÂµÃÂ´ÃÂ¸ÃÂÃÂµ ÃÂÃÂµÃÂ»ÃÂµÃÂÃÂ¾ÃÂ½',\n    };\n\n    get errorsMap(): string[] {\n        const errorMessages = {\n            ...this.defaultErrorMessages,\n            ...(this.errorsMessages || {})\n        };\n        const errorKeys = Object.keys(this.errors);\n        return errorKeys.map((key) => errorMessages[key]);\n    }\n\n    showError(index: number): boolean {\n        return ++index <= this.showCount;\n    }\n}\n","import { AfterViewInit, Component, forwardRef, Input, ViewChild } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { EvoControlStates } from '../../common/evo-control-state-manager/evo-control-states.enum';\nimport { EvoBaseControl } from '../../common/evo-base-control';\n\n@Component({\n  selector: 'evo-input',\n  template: `<div class=\"evo-input\" [evoUiClass]=\"inputClass\">\n    <label class=\"evo-input__container\">\n        <input #input\n               *ngIf=\"!mask\"\n               class=\"evo-input__field\"\n               (focus)=\"onFocus()\"\n               (blur)=\"onBlur()\"\n               type=\"{{ type }}\"\n               placeholder=\"{{ placeholder }}\"\n               [(ngModel)]=\"value\"\n               [disabled]=\"disabled\">\n        <input #input\n               *ngIf=\"mask\"\n               class=\"evo-input__field\"\n               (focus)=\"onFocus()\"\n               (blur)=\"onBlur()\"\n               type=\"{{ type }}\"\n               placeholder=\"{{ placeholder }}\"\n               [(ngModel)]=\"value\"\n               [textMask]=\"mask\"\n               [disabled]=\"disabled\">\n        <div class=\"evo-input__additional\"\n             *ngIf=\"hasAdditional\">\n            <div class=\"evo-input__tooltip\"\n                 *ngIf=\"tooltip\"\n                 (mouseenter)=\"showTooltip()\"\n                 (mouseleave)=\"hideTooltip()\"\n                 (click)=\"onTooltipClick($event)\">?</div>\n            <div *ngIf=\"tooltip && tooltipShown\"\n                 (click)=\"onTooltipClick($event)\"\n                 (mouseenter)=\"showTooltip()\"\n                 (mouseleave)=\"hideTooltip()\"\n                 class=\"evo-input__tooltip-label\">{{ tooltip }}</div>\n        </div>\n    </label>\n</div>\n<evo-control-error *ngIf=\"showErrors\"\n                   [errors]=\"control.errors\"\n                   [errorsMessages]=\"errorsMessages\"></evo-control-error>\n`,\n  styles: [`.evo-input{display:flex;width:100%;height:48px;line-height:48px;white-space:nowrap;background-color:#fff;background-image:none;border:1px solid #dbdbdb;border-radius:4px;transition:box-shadow .3s,border .3s;outline:0}.evo-input__container{display:flex;align-items:center;margin:0;width:100%;height:100%;border-radius:4px;cursor:text}.evo-input_focused{box-shadow:0 0 2px 0 #546e7a!important;border:1px solid #546e7a}.evo-input_disabled{background-color:#f6f6f6!important;color:#9b9b9b}.evo-input_disabled .evo-input__container{cursor:default}.evo-input_valid{border-color:#8bc34a}.evo-input_invalid{border-color:#f22}.evo-input__field{height:100%;border:none;margin:0;padding:0 20px;outline:0;font-size:16px;font-weight:400;color:#000;flex-grow:1;border-radius:4px;width:100%}.evo-input__field::-webkit-input-placeholder{color:#9b9b9b}.evo-input__field::-moz-placeholder{color:#9b9b9b;opacity:1}.evo-input__field:-ms-input-placeholder{color:#9b9b9b}.evo-input__field:disabled{background-color:#f6f6f6!important;color:#9b9b9b}.evo-input__field:not(:last-child){padding-right:0}.evo-input__tooltip{-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;margin:0 10px;width:24px;height:24px;border-radius:50%;background:#eceff1;line-height:24px;text-align:center;font-family:\"Open Sans\",Arial,sans-serif;font-size:18px;font-weight:600;color:#546e7a;cursor:pointer}.evo-input__tooltip-label{position:absolute;width:100%;top:calc(100% - 2px);left:0;background-color:#fff8e6;z-index:1;border-radius:4px;padding:10px 10px 10px 20px;color:#212121;display:flex;box-shadow:0 4px 12px 0 rgba(0,0,0,.2);line-height:normal;white-space:normal;cursor:default}.evo-input__tooltip-label:before{content:'';top:-20px;left:calc(100% - 34px);border:10px solid transparent;border-bottom:10px solid #fff8e6;position:absolute;pointer-events:none}@media (min-width:1200px){.evo-input__tooltip-label{left:calc(50% - 22px)}.evo-input__tooltip-label:before{content:'';top:-20px;left:calc(50% - 12px);border:10px solid transparent;border-bottom:10px solid #fff8e6;position:absolute}}`],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => EvoInputComponent),\n      multi: true\n    }\n  ]\n})\nexport class EvoInputComponent extends EvoBaseControl implements ControlValueAccessor, AfterViewInit {\n  @Input() autoFocus: boolean;\n  @Input() mask: any;\n  @Input() placeholder: string;\n  @Input() tooltip: string;\n  @Input() type = 'text';\n  @Input('value') _value: string;\n\n  @ViewChild('input') inputElement;\n\n  onChange;\n  onTouched;\n\n  public tooltipShown = false;\n\n  public disabled = false;\n  private focused = false;\n  private tooltipVisibilityTimeout = false;\n\n  constructor() {\n    super();\n  }\n\n  ngAfterViewInit() {\n    if (this.autoFocus) {\n      this.inputElement.nativeElement.focus();\n    }\n  }\n\n  get value(): any {\n    return this._value;\n  }\n\n  set value(value: any) {\n    if (value || this._value) {\n      this._value = value;\n      this.onChange(value);\n    }\n  }\n\n  get inputClass(): {[cssClass: string]: boolean} {\n    return {\n      'focused': this.focused,\n      'disabled': this.disabled,\n      'valid': this.stateManager.currentState[EvoControlStates.valid],\n      'invalid': this.stateManager.currentState[EvoControlStates.invalid]\n    };\n  }\n\n  get hasAdditional(): boolean {\n    return !!this.tooltip;\n  }\n\n  writeValue(value: any): void {\n    if (value) {\n      this.value = value;\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(state: boolean): void {\n    this.disabled = state;\n  }\n\n  onFocus(): void {\n    if (!this.focused) {\n      this.focused = true;\n    }\n  }\n\n  onBlur(): void {\n    this.focused = false;\n    this.onTouched();\n  }\n\n  onTooltipClick(event: any): void {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  hideTooltip() {\n    this.tooltipVisibilityTimeout = true;\n    setTimeout(() => {\n      if (this.tooltipVisibilityTimeout) {\n        this.tooltipShown = false;\n      }\n    }, 25);\n  }\n\n  showTooltip() {\n    this.tooltipShown = true;\n    this.tooltipVisibilityTimeout = false;\n  }\n}\n","import { Component, EventEmitter, Inject, Input, Output } from '@angular/core';\n\nimport { Serializable } from '../../common/Serializable';\n\nexport enum EvoBannerTypes {\n  large = 'large',\n  small = 'small',\n  fullWidth = 'full-width',\n}\n\nexport enum EvoBannerLocations {\n  main = 'Main',\n  category = 'Category'\n}\n\nexport interface IEvoBannerAnalytics {\n  url: string;\n  data: {\n    id: string;\n    name: string;\n    creative: string;\n    position: string;\n    dimension7?: string;\n  };\n}\n\nexport class EvoBanner extends Serializable {\n  background: string;\n  bannerPositionNames = {\n    [EvoBannerLocations.main]: [\n      'main',\n      'top',\n      'bottom'\n    ],\n    [EvoBannerLocations.category]: [\n      'main'\n    ]\n  };\n  button: string;\n  id: string;\n  image: string;\n  title: string;\n  url: string;\n\n  constructor(data) {\n    super(data);\n  }\n}\n\n@Component({\n  selector: 'evo-banner',\n  template: `<a class=\"evo-banner\"\n   target=\"_blank\"\n   [attr.href]=\"banner?.url\"\n   (click)=\"onBannerClick()\"\n   [evoUiClass]=\"type\"\n   [ngStyle]=\"{'background-color': banner?.background}\">\n    <div class=\"evo-banner__content\">\n        <div class=\"evo-banner__title\">{{ banner?.title }}</div>\n        <button class=\"btn btn-white promo-btn\"\n                [ngStyle]=\"{'color': banner?.background}\"\n                *ngIf=\"banner?.button\">{{ banner?.button }}</button>\n    </div>\n    <img class=\"evo-banner__img\"\n         src=\"{{ banner?.image }}\"\n         alt=\"{{ banner?.title }}\">\n</a>\n`,\n  styles: [`.evo-banner{display:block;position:relative;height:430px;padding:12px 20px;border-radius:6px;overflow:hidden;color:#fff;cursor:pointer;transition:box-shadow .3s}.evo-banner:hover{box-shadow:0 4px 12px rgba(0,0,0,.2)}.evo-banner__content{position:relative;z-index:2}.evo-banner__content .promo-btn{height:40px;padding:0 20px;min-width:156px;font-weight:600;font-size:14px;text-transform:uppercase;display:table-cell;vertical-align:middle}.evo-banner__content .promo-btn:hover{background:#fff}.evo-banner__content .promo-btn:active{box-shadow:none}.evo-banner__content .promo-btn span{font-size:18px}.evo-banner__title{font-family:museo,Arial,sans-serif;font-weight:700;line-height:1.3;font-size:30px;margin-bottom:10px}.evo-banner__description{font-size:14px;line-height:1.3;margin-top:20px;margin-bottom:10px}.evo-banner__img{position:absolute;bottom:0;right:0;width:290px;height:290px}.evo-banner_full-width{padding:20px}.evo-banner_full-width .evo-banner__title{line-height:38px}@media (min-width:768px){.evo-banner{padding:30px 40px}.evo-banner__content{max-width:60%}.evo-banner__description{max-width:250px}.evo-banner__img{width:430px;height:430px}.evo-banner_full-width{height:240px;padding:30px}.evo-banner_full-width .evo-banner__content{max-width:50%}.evo-banner_full-width .evo-banner__title{font-size:36px;line-height:44px}.evo-banner_full-width .evo-banner__img{height:240px;width:240px}}@media (min-width:1200px){.evo-banner{padding:30px 40px}.evo-banner__content{max-width:63%}.evo-banner_small{height:210px;padding:20px}.evo-banner_small .evo-banner__title{font-size:20px;margin-bottom:20px}.evo-banner_small .promo-btn{height:32px}.evo-banner_small .evo-banner__img{width:210px;height:210px}.evo-banner_full-width .evo-banner__content{max-width:63%}}`],\n  providers: [\n    { provide: 'Window',  useValue: window }\n  ],\n})\nexport class EvoBannerComponent {\n  @Input() banner: EvoBanner;\n  @Input() type: EvoBannerTypes = EvoBannerTypes.small;\n\n  @Output() bannerClick: EventEmitter<EvoBanner> = new EventEmitter<EvoBanner>();\n\n  constructor(\n    @Inject('Window') private window: any,\n  ) {\n  }\n\n  onBannerClick() {\n    this.bannerClick.emit(this.banner);\n  }\n}\n","export class Serializable {\n    constructor(data) {\n        Object.assign(this, data);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nexport enum EvoSidebarTypes {\n    basket = 'basket',\n    partnerAuth = 'partnerAuth',\n    promoCode = 'promoCode',\n}\n\n@Injectable()\nexport class EvoSidebarService {\n    isSidebarVisible$ = new BehaviorSubject({});\n    private registeredSidebars = {};\n\n    deregister(id: EvoSidebarTypes) {\n        delete this.registeredSidebars[id];\n    }\n\n    register(id: EvoSidebarTypes) {\n        if (!(id in EvoSidebarTypes)) {\n            console.error(`Sidebar. Unknown '${id}', please add this id in enum`);\n            return;\n        }\n        this.registeredSidebars[id] = false;\n    }\n\n    open(id: EvoSidebarTypes) {\n        this.registeredSidebars[id] = true;\n        this.isSidebarVisible$.next(this.registeredSidebars);\n    }\n\n    close(id: EvoSidebarTypes) {\n        this.registeredSidebars[id] = false;\n        this.isSidebarVisible$.next(this.registeredSidebars);\n    }\n}\n","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { Subscription, fromEvent as observableFromEvent } from 'rxjs';\nimport { Key } from 'ts-keycode-enum';\n\nimport { EvoSidebarService, EvoSidebarTypes } from './evo-sidebar.service';\n\n\n@Component({\n    selector: 'evo-sidebar',\n    styles: [`.evo-sidebar{position:fixed;top:0;left:120%;bottom:0;z-index:3000;display:flex;flex-direction:column;width:100%;background-color:#fff;box-shadow:0 0 12px rgba(0,0,0,.25)}@media (min-width:992px){.evo-sidebar{left:100%;margin-left:40px;width:674px;transition:-webkit-transform .5s;transition:transform .5s;transition:transform .5s,-webkit-transform .5s}}.evo-sidebar_active{left:0}.evo-sidebar__header{display:flex;justify-content:space-between;align-items:flex-start;flex-shrink:0;border-bottom:1px solid #eceff1;padding:20px 0 8px;margin:0 15px}@media (min-width:992px){.evo-sidebar_active{left:100%;-webkit-transform:translateX(-714px);transform:translateX(-714px)}.evo-sidebar__header{margin:0 30px}}.evo-sidebar__title{font-family:museo,Arial,sans-serif;font-size:30px;font-weight:700;color:#333f48}@media (min-width:768px){.evo-sidebar__header{padding-top:38px}.evo-sidebar__title{font-size:30px;padding:0}}.evo-sidebar__close{padding:8px;transition:opacity .3s;margin:2px -8px 0 30px;cursor:pointer}.evo-sidebar__close:hover{opacity:.8}.evo-sidebar__close-icon{width:24px;height:24px;color:#546e7a;background:url(/assets/evo-ui-kit/icons/close.svg)}.evo-sidebar__content{display:flex;flex-direction:column;flex-grow:1;padding:20px 15px 40px;overflow-y:auto;-webkit-overflow-scrolling:touch}@media (min-width:768px){.evo-sidebar__content{padding:40px 15px}}@media (min-width:992px){.evo-sidebar__content{padding:40px 30px}}.evo-sidebar__footer{display:flex;flex-direction:column;flex-shrink:0;padding:30px 15px;box-shadow:0 4px 12px rgba(0,0,0,.25);background-color:#fff}.evo-sidebar__footer:empty{display:none}@media (min-width:768px){.evo-sidebar__footer{flex-direction:row;justify-content:space-between;padding:18px 15px}}@media (min-width:992px){.evo-sidebar__footer{padding:18px 30px}}.evo-sidebar__buttons{display:flex;flex-direction:column;padding:30px 0 10px}.evo-sidebar__buttons_border{border-top:1px solid #eceff1;margin-top:50px}.evo-sidebar__button+.evo-sidebar__button{margin-top:20px}@media (min-width:768px){.evo-sidebar__buttons{flex-direction:row;justify-content:space-between;padding-bottom:0}.evo-sidebar__button+.evo-sidebar__button{margin-top:0}}`],\n    template: `<div class=\"fade-background fade-background_over-all\"\n     *ngIf=\"states.isVisible\"\n     (click)=\"closeSidebar()\"\n></div>\n\n<div class=\"evo-sidebar\" [ngClass]=\"{'evo-sidebar_active' : states.isVisible}\" >\n    <div class=\"evo-sidebar__header\">\n        <div class=\"evo-sidebar__title\">{{ title }}</div>\n\n        <div class=\"evo-sidebar__close\" (click)=\"sidebarService.close(id)\">\n            <div class=\"evo-sidebar__close-icon\"></div>\n        </div>\n    </div>\n\n\n    <div class=\"evo-sidebar__content\">\n        <ng-content select=\"[content]\"></ng-content>\n    </div>\n\n    <div class=\"evo-sidebar__footer\"><ng-content select=\"[footer]\"></ng-content></div> <!--ÃÂÃÂÃÂ¾ÃÂ±ÃÂ :empty ÃÂÃÂ°ÃÂ±ÃÂ¾ÃÂÃÂ°ÃÂ», ÃÂ½ÃÂµ ÃÂ´ÃÂ¾ÃÂ»ÃÂ¶ÃÂ½ÃÂ¾ ÃÂ±ÃÂÃÂÃÂ ÃÂ²ÃÂ½ÃÂÃÂÃÂÃÂ¸ evo-sidebar__footer ÃÂ²ÃÂ¾ÃÂ¾ÃÂ±ÃÂÃÂµ ÃÂ½ÃÂ¸ÃÂÃÂµÃÂ³ÃÂ¾, ÃÂ´ÃÂ°ÃÂ¶ÃÂµ ÃÂ¿ÃÂÃÂ¾ÃÂ±ÃÂµÃÂ»ÃÂ°-->\n</div>\n`,\n})\nexport class EvoSidebarComponent implements OnDestroy, OnInit {\n    @Input() id: EvoSidebarTypes;\n    @Input() title: string;\n\n    @Output() onClose: EventEmitter<any> = new EventEmitter<any>();\n\n    keyUpSubscription: Subscription;\n    states = {\n        isVisible: false,\n    };\n\n    constructor(public sidebarService: EvoSidebarService) {}\n\n    ngOnDestroy() {\n        this.sidebarService.deregister(this.id);\n    }\n\n    ngOnInit() {\n        this.sidebarService.register(this.id);\n\n        this.sidebarService.isSidebarVisible$.subscribe((payload) => {\n            if (this.id in payload) {\n                this.states.isVisible = payload[this.id];\n            }\n\n            if (this.states.isVisible) {\n                this.keyUpSubscription = this.subscribeToKeyEvent();\n            } else if (this.keyUpSubscription) {\n                this.keyUpSubscription.unsubscribe();\n                this.keyUpSubscription = null;\n            }\n        });\n    }\n\n    closeSidebar() {\n        this.sidebarService.close(this.id);\n        this.onClose.emit();\n    }\n\n    private subscribeToKeyEvent() {\n        return observableFromEvent(document.body, 'keyup').subscribe((event: KeyboardEvent) => {\n            if (event.keyCode === Key.Escape) {\n                this.sidebarService.close(this.id);\n            }\n        });\n    }\n}\n","import { Directive, ElementRef, Input, IterableDiffers, KeyValueDiffers, Renderer2 } from '@angular/core';\nimport { NgClass } from '@angular/common';\n\nconst isObject = (item) => item != null && typeof item === 'object';\nconst isString = (item) => typeof item === 'string';\nconst isArray = (item) => Array.isArray(item);\n\n@Directive({\n  selector: '[evoUiClass]'\n})\nexport class EvoUiClassDirective extends NgClass {\n  @Input('evoUiClass')\n  set setterOfClass(data: any) {\n    if (isArray(data)) {\n      data = data.map((className: string) => `${this.prefix}_${className}`);\n    } else if (isObject(data)) {\n      data = Object.keys(data).reduce((newData: any, key: string) => {\n        newData[`${this.prefix}_${key}`] = data[key];\n        return newData;\n      }, {});\n    } else if (isString(data)) {\n      data = data\n        .split(' ')\n        .map((myClass) => `${this.prefix}_${myClass}`)\n        .join(' ');\n    } else {\n      throw new Error('Data type not allowed!');\n    }\n\n    this.ngClass = data;\n  }\n\n  ngClass: any;\n\n  private prefix: string;\n\n  constructor(_iterableDiffers: IterableDiffers, _keyValueDiffers: KeyValueDiffers,\n        _ngEl: ElementRef, _renderer: Renderer2) {\n    super(_iterableDiffers, _keyValueDiffers, _ngEl, _renderer);\n    this.prefix = _ngEl.nativeElement.classList[0];\n  }\n}\n","import { NgModule, ModuleWithProviders, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { TextMaskModule } from 'angular2-text-mask';\n\nimport { EvoButtonComponent } from './components/evo-button/evo-button.component';\nimport { EvoCheckboxComponent  } from './components/evo-checkbox/evo-checkbox.component';\nimport { EvoControlErrorComponent } from './components/evo-control-error/evo-control-error.component';\nimport { EvoInputComponent } from './components/evo-input/evo-input.component';\nimport { EvoBannerComponent } from './components/evo-banner/evo-banner.component';\nimport { EvoSidebarComponent } from './components/evo-sidebar/evo-sidebar.component';\nimport { EvoSidebarService } from './components/evo-sidebar/evo-sidebar.service';\nexport { EvoSidebarService } from './components/evo-sidebar/evo-sidebar.service';\n\nimport { EvoUiClassDirective } from './directives/evo-ui-class.directive';\n\nconst components: any = [\n  EvoButtonComponent,\n  EvoCheckboxComponent,\n  EvoControlErrorComponent,\n  EvoInputComponent,\n  EvoBannerComponent,\n  EvoSidebarComponent,\n];\n\nconst directives: any = [\n  EvoUiClassDirective,\n];\n\nconst bundle: any = [\n  ...components,\n  ...directives\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    TextMaskModule,\n  ],\n  declarations: [\n    ...bundle,\n  ],\n  exports: [\n    ...bundle,\n  ],\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA ]\n})\nexport class EvoUiKitModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: EvoUiKitModule,\n      providers: [\n        EvoSidebarService,\n      ]\n    };\n  }\n}\n\n\n"]}